- name: Create shared resources
  block:
    - name: Create SSH Key Pair
      ansible.builtin.include_tasks: create_key_pair.yml

    - name: Create VPC
      ansible.builtin.include_tasks: create_vpc.yml

    - name: Create Security Group
      ansible.builtin.include_tasks: create_security_group.yml

    - name: Create Subnet
      ansible.builtin.include_tasks: create_subnet.yml

    - name: Create Internet Gateway
      ansible.builtin.include_tasks: create_igw.yml

    - name: Create Route Table
      ansible.builtin.include_tasks: create_rt_table.yml
  when: first

- name: Provision EC2 Instance
  ansible.builtin.include_tasks: create_ec2_instance.yml

- name: Save VM username
  ansible.builtin.set_fact:
    vm_username: "{{ ec2_username }}"

- name: Get EC2 info (and retry to give it time to get the public IP address)
  amazon.aws.ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      "tag:Name": "{{ virtual_machine }}"
      "tag:Environment": "{{ ec2_environment }}"
      # 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped)
      instance-state-code: ["0", "16"]
  register: ec2
  until: ec2.instances[0].public_ip_address is defined
  retries: 30
  delay: 10

- name: Save public IP address
  ansible.builtin.set_fact:
    pub_ip: "{{ ec2.instances[0].public_ip_address }}"
  ignore_errors: true

- name: Save access details
  ansible.builtin.set_fact:
    ssh_info: "ssh -i {{ ec2_resource_prefix }}-private.pem {{ ec2_username }}@{{ ec2.instances[0].public_dns_name }}"

- name: DNS for EC2 instance
  community.aws.route53:
    state: present
    zone: "{{ dns_zone }}"
    record: "{{ virtual_machine }}.{{ dns_zone }}"
    type: A
    overwrite: true
    value: "{{ pub_ip }}"
  when: dns_zone is defined and dns_zone != ""

- name: Wait until we can SSH to the instance
  ansible.builtin.wait_for:
    host: "{{ pub_ip }}"
    port: 22
    state: started
